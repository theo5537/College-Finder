{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amayB\\\\college-finder\\\\src\\\\components\\\\FilterPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TYPES = ['IIT', 'NIT', 'IIIT', 'BITS'];\nconst FilterPanel = ({\n  filters,\n  onChange,\n  colleges\n}) => {\n  _s();\n  // Get unique states and branches from colleges\n  const states = useMemo(() => Array.from(new Set(colleges.map(c => c.state))).sort(), [colleges]);\n  const cities = useMemo(() => {\n    if (!filters.state) return [];\n    return Array.from(new Set(colleges.filter(c => c.state === filters.state).map(c => c.city))).sort();\n  }, [colleges, filters.state]);\n  const branches = useMemo(() => Array.from(new Set(colleges.flatMap(c => c.branches))).sort(), [colleges]);\n  const handleTypeChange = type => {\n    const newTypes = filters.types.includes(type) ? filters.types.filter(t => t !== type) : [...filters.types, type];\n    onChange({\n      types: newTypes\n    });\n  };\n  const handleStateChange = e => {\n    onChange({\n      state: e.target.value,\n      city: ''\n    });\n  };\n  const handleCityChange = e => {\n    onChange({\n      city: e.target.value\n    });\n  };\n  const handleBranchChange = branch => {\n    const newBranches = filters.branches.includes(branch) ? filters.branches.filter(b => b !== branch) : [...filters.branches, branch];\n    onChange({\n      branches: newBranches\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-wrap gap-4 items-center animate-fade-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2\",\n      children: TYPES.map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleTypeChange(type),\n        className: `px-3 py-1 rounded-full border text-xs font-semibold transition-all duration-150 focus:outline-none ${filters.types.includes(type) ? 'bg-blue-600 border-blue-400' : 'bg-gray-700 border-gray-600 hover:bg-gray-600'}`,\n        children: type\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: filters.state,\n      onChange: handleStateChange,\n      className: \"bg-gray-800 border border-gray-700 rounded px-3 py-1 text-xs focus:ring-2 focus:ring-blue-500 transition\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), states.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: state,\n        children: state\n      }, state, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: filters.city,\n      onChange: handleCityChange,\n      disabled: !filters.state,\n      className: \"bg-gray-800 border border-gray-700 rounded px-3 py-1 text-xs focus:ring-2 focus:ring-blue-500 transition disabled:opacity-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: city,\n        children: city\n      }, city, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 flex-wrap\",\n      children: branches.map(branch => /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleBranchChange(branch),\n        className: `px-3 py-1 rounded-full border text-xs font-semibold transition-all duration-150 focus:outline-none ${filters.branches.includes(branch) ? 'bg-green-600 border-green-400' : 'bg-gray-700 border-gray-600 hover:bg-gray-600'}`,\n        children: branch\n      }, branch, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(FilterPanel, \"QQDzCwHNHUGzl2Fyb2cgYTzyz+Q=\");\n_c = FilterPanel;\nexport default FilterPanel;\nvar _c;\n$RefreshReg$(_c, \"FilterPanel\");","map":{"version":3,"names":["React","useMemo","jsxDEV","_jsxDEV","TYPES","FilterPanel","filters","onChange","colleges","_s","states","Array","from","Set","map","c","state","sort","cities","filter","city","branches","flatMap","handleTypeChange","type","newTypes","types","includes","t","handleStateChange","e","target","value","handleCityChange","handleBranchChange","branch","newBranches","b","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["C:/Users/amayB/college-finder/src/components/FilterPanel.jsx"],"sourcesContent":["import React, { useMemo } from 'react';\r\n\r\nconst TYPES = ['IIT', 'NIT', 'IIIT', 'BITS'];\r\n\r\nconst FilterPanel = ({ filters, onChange, colleges }) => {\r\n  // Get unique states and branches from colleges\r\n  const states = useMemo(() => Array.from(new Set(colleges.map(c => c.state))).sort(), [colleges]);\r\n  const cities = useMemo(() => {\r\n    if (!filters.state) return [];\r\n    return Array.from(new Set(colleges.filter(c => c.state === filters.state).map(c => c.city))).sort();\r\n  }, [colleges, filters.state]);\r\n  const branches = useMemo(() => Array.from(new Set(colleges.flatMap(c => c.branches))).sort(), [colleges]);\r\n\r\n  const handleTypeChange = (type) => {\r\n    const newTypes = filters.types.includes(type)\r\n      ? filters.types.filter(t => t !== type)\r\n      : [...filters.types, type];\r\n    onChange({ types: newTypes });\r\n  };\r\n\r\n  const handleStateChange = (e) => {\r\n    onChange({ state: e.target.value, city: '' });\r\n  };\r\n\r\n  const handleCityChange = (e) => {\r\n    onChange({ city: e.target.value });\r\n  };\r\n\r\n  const handleBranchChange = (branch) => {\r\n    const newBranches = filters.branches.includes(branch)\r\n      ? filters.branches.filter(b => b !== branch)\r\n      : [...filters.branches, branch];\r\n    onChange({ branches: newBranches });\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-wrap gap-4 items-center animate-fade-in\">\r\n      {/* Institute Type Multi-select */}\r\n      <div className=\"flex gap-2\">\r\n        {TYPES.map(type => (\r\n          <button\r\n            key={type}\r\n            type=\"button\"\r\n            onClick={() => handleTypeChange(type)}\r\n            className={`px-3 py-1 rounded-full border text-xs font-semibold transition-all duration-150 focus:outline-none ${filters.types.includes(type) ? 'bg-blue-600 border-blue-400' : 'bg-gray-700 border-gray-600 hover:bg-gray-600'}`}\r\n          >\r\n            {type}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {/* State Dropdown */}\r\n      <select\r\n        value={filters.state}\r\n        onChange={handleStateChange}\r\n        className=\"bg-gray-800 border border-gray-700 rounded px-3 py-1 text-xs focus:ring-2 focus:ring-blue-500 transition\"\r\n      >\r\n        <option value=\"\">State</option>\r\n        {states.map(state => (\r\n          <option key={state} value={state}>{state}</option>\r\n        ))}\r\n      </select>\r\n      {/* City Dropdown */}\r\n      <select\r\n        value={filters.city}\r\n        onChange={handleCityChange}\r\n        disabled={!filters.state}\r\n        className=\"bg-gray-800 border border-gray-700 rounded px-3 py-1 text-xs focus:ring-2 focus:ring-blue-500 transition disabled:opacity-50\"\r\n      >\r\n        <option value=\"\">City</option>\r\n        {cities.map(city => (\r\n          <option key={city} value={city}>{city}</option>\r\n        ))}\r\n      </select>\r\n      {/* Branch Multi-select */}\r\n      <div className=\"flex gap-2 flex-wrap\">\r\n        {branches.map(branch => (\r\n          <button\r\n            key={branch}\r\n            type=\"button\"\r\n            onClick={() => handleBranchChange(branch)}\r\n            className={`px-3 py-1 rounded-full border text-xs font-semibold transition-all duration-150 focus:outline-none ${filters.branches.includes(branch) ? 'bg-green-600 border-green-400' : 'bg-gray-700 border-gray-600 hover:bg-gray-600'}`}\r\n          >\r\n            {branch}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterPanel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}